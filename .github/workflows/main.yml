name: Main

on:
  push:
    branches: [main, staging, try]
  pull_request:
    branches: ['**']

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest nightly with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Check format
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest nightly with clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: clippy

      - name: Clippy lint
        run: cargo clippy --workspace --all-features -- -D clippy::all -D clippy::pedantic -D clippy::nursery -D clippy::cargo

  compile_debug:
    name: Compile in debug mode
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
            ext: ".exe"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Setup cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-debug
          path: target/debug/terbium${{ matrix.ext }}

  compile_release:
    name: Compile in release mode
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
            ext: ".exe"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Setup cache
        uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build --verbose --release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-release
          path: target/release/terbium${{ matrix.ext }}

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Setup cache
        uses: Swatinem/rust-cache@v1

      - name: Run tests
        run: cargo test --verbose --workspace

  miri_test:
      name: Miri Test
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2

        - name: Install latest nightly with miri
          uses: actions-rs/toolchain@v1
          with:
            toolchain: nightly
            override: true
            components: miri

        - name: Setup cache
          uses: Swatinem/rust-cache@v1
      
        - name: Setup miri
          run: cargo miri setup
        
        - name: Run miri test
          run: cargo miri test --verbose --workspace
